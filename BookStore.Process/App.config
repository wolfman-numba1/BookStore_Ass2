<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,                  Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <connectionStrings>
    <add name="BookStoreEntityModelContainer" connectionString="metadata=res://*/BookStoreEntityModel.csdl|res://*/BookStoreEntityModel.ssdl|res://*/BookStoreEntityModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=(localdb)\MSSQLLocalDb;Initial Catalog=BookStore;Integrated Security=True;Pooling=False&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>



  <unity>

    <typeAliases>
      <!-- Lifetime manager types -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,                      Microsoft.Practices.Unity" />
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,                      Microsoft.Practices.Unity" />

      <!-- Custom object types -->
      <typeAlias alias="IUserProvider" type="BookStore.Business.Components.Interfaces.IUserProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="UserProvider" type="BookStore.Business.Components.UserProvider, BookStore.Business.Components" />

      <typeAlias alias="ICatalogueProvider" type="BookStore.Business.Components.Interfaces.ICatalogueProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="CatalogueProvider" type="BookStore.Business.Components.CatalogueProvider, BookStore.Business.Components" />
		
	  <typeAlias alias="IWarehouseProvider" type="BookStore.Business.Components.Interfaces.IWarehouseProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="WarehouseProvider" type="BookStore.Business.Components.WarehouseProvider, BookStore.Business.Components" />

      <typeAlias alias="IOrderProvider" type="BookStore.Business.Components.Interfaces.IOrderProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="OrderProvider" type="BookStore.Business.Components.OrderProvider, BookStore.Business.Components" />

      <typeAlias alias="IRoleProvider" type="BookStore.Business.Components.Interfaces.IRoleProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="RoleProvider" type="BookStore.Business.Components.RoleProvider, BookStore.Business.Components" />

      <typeAlias alias="IEmailProvider" type="BookStore.Business.Components.Interfaces.IEmailProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="EmailProvider" type="BookStore.Business.Components.EmailProvider, BookStore.Business.Components" />

      <typeAlias alias="IDeliveryNotificationProvider" type="BookStore.Business.Components.Interfaces.IDeliveryNotificationProvider, BookStore.Business.Components.Interfaces" />
      <typeAlias alias="DeliveryNotificationProvider" type="BookStore.Business.Components.DeliveryNotificationProvider, BookStore.Business.Components" />
     
      <typeAlias alias="ITransferNotificationProvider" type="BookStore.Business.Components.Interfaces.ITransferNotificationProvider, BookStore.Business.Components.Interfaces"/>
     
    
    </typeAliases>
    <containers>
      <container name="containerOne">
        <types>

          <type type="IUserProvider" mapTo="UserProvider" />
          <type type="ICatalogueProvider" mapTo="CatalogueProvider" />
          <type type="IOrderProvider" mapTo="OrderProvider" />
          <type type="IRoleProvider" mapTo="RoleProvider" />
          <type type="IEmailProvider" mapTo="EmailProvider" />
          <type type="IDeliveryNotificationProvider" mapTo="DeliveryNotificationProvider" />
          <type type="ITransferNotificationProvider" mapTo="OrderProvider" />
         
        </types>
      </container>
    </containers>
  </unity>

  <appSettings>
    <add key="ServiceAssemblyName" value="BookStore.Services" />
    <!-- Use appSetting to configure MSMQ queue name. -->
    <add key="transferNotifyQueueName" value=".\\private$\\TransferNotifyMessageQueue" />
    <add key="transferNotifyAddress" value="net.msmq://localhost/private/TransferNotifyMessageQueue" />
  </appSettings>
  <system.serviceModel>
    <services>
      <service name="BookStore.Services.UserService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/UserService" binding="netTcpBinding" contract="BookStore.Services.Interfaces.IUserService" />

        <endpoint address="net.tcp://localhost:9010/UserService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>

      <service name="BookStore.Services.CatalogueService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/CatalogueService" binding="netTcpBinding" contract="BookStore.Services.Interfaces.ICatalogueService" />

        <endpoint address="net.tcp://localhost:9010/CatalogueService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>

      <service name="BookStore.Services.WarehouseService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/WarehouseService" binding="netTcpBinding" contract="BookStore.Services.Interfaces.IWarehouseService" />

        <endpoint address="net.tcp://localhost:9010/WarehouseService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>

      <service name="BookStore.Services.OrderService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/OrderService" binding="netTcpBinding" contract="BookStore.Services.Interfaces.IOrderService" />

        <endpoint address="net.tcp://localhost:9010/OrderService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>

      <service name="BookStore.Services.RoleService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/RoleService" binding="netTcpBinding" contract="BookStore.Services.Interfaces.IRoleService" />

        <endpoint address="net.tcp://localhost:9010/RoleService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>

      <!--<service name="BookStore.Services.DeliveryNotificationService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.tcp://localhost:9010/DeliveryNotificationService" binding="netTcpBinding" contract="DeliveryCo.Services.Interfaces.IDeliveryNotificationService"/>

        <endpoint address="net.tcp://localhost:9010/DeliveryNotificationService/mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service> -->

    <!--  <service name="BookStore.Services.DeliveryNotificationService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.msmq://localhost/private/EmailNotifyMessageQueue"
                  binding="netMsmqBinding" bindingConfiguration="msmqSecurityConfig"
                  contract="DeliveryCo.Services.Interfaces.IDeliveryNotificationService"/>

        <endpoint address="net.tcp://localhost:9010/DeliveryNotificationService/mex" binding="mexTcpBinding" contract="IMetadataExchange"/>
      </service>
    -->


      <service name="BookStore.Services.DeliveryNotificationService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.msmq://localhost/private/DeliveryNotifyMessageQueue"
                  binding="netMsmqBinding" bindingConfiguration="msmqSecurityConfig"
                  contract="DeliveryCo.Services.Interfaces.IDeliveryNotificationService"/>

        <endpoint address="net.tcp://localhost:9010/DeliveryNotificationService/mex" binding="mexTcpBinding" contract="IMetadataExchange"/>
      </service>



      <service name="BookStore.Services.TransferNotificationService" behaviorConfiguration="ServiceMetadataBehavior">

        <endpoint address="net.msmq://localhost/private/TransferNotifyMessageQueue"
                  binding="netMsmqBinding" bindingConfiguration="msmqSecurityConfig"
                  contract="Bank.Services.Interfaces.ITransferNotificationService"/>

        <endpoint address="net.tcp://localhost:9010/TransferNotificationService/mex" binding="mexTcpBinding" contract="IMetadataExchange"/>
      </service>
    </services>
    <bindings>
      <netMsmqBinding>
        <binding name="msmqSecurityConfig" durable="true">
          <security mode="None" />
        </binding>
      </netMsmqBinding>
      <netTcpBinding>
        <binding name="NetTcpBinding_ITransferService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="true" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
        <binding name="NetTcpBinding_IDeliveryService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="true" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
        <binding name="NetTcpBinding_IEmailService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288" maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
    <endpoint address="net.tcp://localhost:9020/TransferService" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_ITransferService" contract="TransferService.ITransferService" name="NetTcpBinding_ITransferService">
        <identity>
          <userPrincipalName value="Matt-PC\Matt" />
        </identity>
      </endpoint>
    
      <endpoint address="net.tcp://localhost:9030/DeliveryService" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_IDeliveryService" contract="DeliveryService.IDeliveryService" name="NetTcpBinding_IDeliveryService">
        <identity>
          <userPrincipalName value="Matt-PC\Matt" />
        </identity>
      </endpoint>
      <endpoint address="net.tcp://localhost:9040/EmailService" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_IEmailService" contract="EmailService.IEmailService" name="NetTcpBinding_IEmailService">
        <identity>
          <userPrincipalName value="Matt-PC\Matt" />
        </identity>
      </endpoint>
    </client>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceMetadataBehavior">
          <serviceMetadata />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" /></startup>
 <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
